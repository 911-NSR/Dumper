name: ROM DumperX Extractor (GitHub Safe Mode)

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'ROM direct download link (.zip, .tgz, etc.)'
        required: true
      ROM_TYPE:
        description: 'ROM name (MIUI, HyperOS, LineageOS, etc.)'
        required: true
      TARGET_PATH:
        description: 'Optional folder or file to extract (e.g. vendor/lib/modules)'
        default: ''

jobs:
  dump:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git unzip zip p7zip-full aria2 lz4 brotli python3 python3-pip
          pip install tqdm rich
          echo "‚úÖ Basic environment ready."

      - name: Clone DumprX
        run: |
          git clone --depth=1 https://github.com/DumprX/DumprX.git dumprx
          cd dumprx
          chmod +x setup.sh dumper.sh
          echo "‚úÖ DumprX cloned."

      - name: Run DumprX setup
        run: |
          cd dumprx
          ./setup.sh || true
          echo "‚úÖ DumprX setup complete (safe mode)."

      - name: Download ROM
        run: |
          mkdir -p rom
          cd rom
          echo "üì• Downloading ROM from ${{ inputs.ROM_URL }}"
          aria2c -x16 -s16 -k1M "${{ inputs.ROM_URL }}" -o rom.zip
          ls -lh

      - name: Extract ROM with DumprX (safe mode)
        run: |
          cd dumprx
          echo "‚öôÔ∏è Extracting ROM (rootless safe mode)..."
          # DumprX expects input file path relative to script
          sudo -E bash dumper.sh ../rom/rom.zip ../output --no-mount || bash dumper.sh ../rom/rom.zip ../output --no-mount
          echo "‚úÖ Extraction completed (safe mode)."
          ls -lh ../output || true

      - name: Handle output
        run: |
          cd output || cd rom/output || exit 1
          if [ -n "${{ inputs.TARGET_PATH }}" ]; then
            TARGET="${{ inputs.TARGET_PATH }}"
            echo "üéØ Extracting specific path: $TARGET"
            if [ -d "$TARGET" ]; then
              zip -r ../../${{ inputs.ROM_TYPE }}_${TARGET//\//_}.zip "$TARGET"
            elif [ -f "$TARGET" ]; then
              zip -r ../../${{ inputs.ROM_TYPE }}_${TARGET//\//_}.zip "$TARGET"
            else
              echo "‚ùå Path not found: $TARGET"
              exit 1
            fi
          else
            echo "üì¶ Zipping full dump..."
            zip -r ../../${{ inputs.ROM_TYPE }}_full_dump.zip ./*
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.ROM_TYPE }}-ROM-Dump
          path: |
            *.zip
          retention-days: 7
          
